@use 'sass:math';

$space-amounts: (0, 10, 15, 18, 25, 28, 35, 45, 50, 55, 69, 73, 80, 86, 107);
$sides: (top, bottom, left, right);

/*---
----- generate global margins and padding WITHOUT breakpoints ---
---*/

// margin with all sides with auto
.m-auto {
  margin: auto;
}

// margin individual sides with auto
@each $side in $sides {
  .m-#{str-slice($side, 0, 1)}-auto {
	margin-#{$side}: auto !important;
  }
}

// margin and padding with spaces
@each $space in $space-amounts {
  $space-size: #{math.div($space,10)}rem !important;

  // margin equal sizes (positive, negative)
  .m-#{$space} {
	margin: $space-size;
  }
  .m-n#{$space} {
	margin: -#{$space-size};
  }

  // padding equal sides
  .p-#{$space} {
	padding: $space-size;
  }

  // individual sides
  @each $side in $sides {
	// margin sides (positive, negative)
	.m-#{str-slice($side, 0, 1)}-#{$space} {
	  margin-#{$side}: $space-size;
	}
	.m-#{str-slice($side, 0, 1)}-n#{$space} {
	  margin-#{$side}: -#{$space-size};
	}

	// padding sides
	.p-#{str-slice($side, 0, 1)}-#{$space} {
	  padding-#{$side}: $space-size;
	}
  }
}

/*----------------------------------------------------------*/

/*---
----- generate global margins and padding WITH breakpoints ---
---*/

@each $break, $break-value in $grid-breakpoints-mf {

  // individual sides with spaces
  @each $space in $space-amounts {
	$space-size: #{math.div($space,10)}rem !important;

	@include respondMf($break) {
	  // margin sides (positive, negative)
	  .#{$break}-m-#{$space} {
		margin: $space-size;
	  }
	  .#{$break}-m-n#{$space} {
		margin: -#{$space-size};
	  }

	  // padding sides
	  .#{$break}-p-#{$space} {
		padding: $space-size;
	  }
	}
  }

  // individual sides of margin with auto
  @each $side in $sides {
	// margins with auto size
	.#{$break}-m-#{str-slice($side, 0, 1)}-auto {
	  @include respondMf($break) {
		margin-#{$side}: auto !important;
	  }
	}
  }

  // responsive individuals spaces
  @each $space in $space-amounts {
	$space-size: #{math.div($space,10)}rem !important;

	@each $side in $sides {
	  // margin sides (positive, negative)
	  .#{$break}-m-#{str-slice($side, 0, 1)}-#{$space} {
		@include respondMf($break) {
		  margin-#{$side}: $space-size;
		}
	  }
	  .#{$break}-m-#{str-slice($side, 0, 1)}-n#{$space} {
		@include respondMf($break) {
		  margin-#{$side}: -#{$space-size};
		}
	  }

	  // padding sides
	  .#{$break}-p-#{str-slice($side, 0, 1)}-#{$space} {
		@include respondMf($break) {
		  padding-#{$side}: $space-size;
		}
	  }
	}
  }
}
